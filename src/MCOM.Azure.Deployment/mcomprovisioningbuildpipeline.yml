variables:
  pathToLogicAppProjectDirectory: '$(System.DefaultWorkingDirectory)/src/${{ variables.logicAppProjectDirectoryName }}'
  pathToFunctionAppProjectDirectory: '$(System.DefaultWorkingDirectory)/src/${{ variables.functionAppProjectDirectoryName }}'

trigger:
  branches:
      include:
          - provisioningservice
  paths:
      include:
          - src/MCOM.Provisioning.Functions/*
          - src/MCOM.Azure.Deployment/* 
          
pool:
  vmImage: 'windows-latest'

stages:
    - stage: CopyScripts
      displayName: Copy scripts (deployment)
      jobs:
          - job: CopyDS
            displayName: Copy deployment scripts to artifact staging directory
            steps:            
            - task: CopyFiles@2
              displayName: Copy deployment files
              inputs:
                SourceFolder: 'src/MCOM.Azure.Deployment'
                Contents: '**'
                TargetFolder: '$(Build.ArtifactStagingDirectory)'
            - publish: '$(Build.ArtifactStagingDirectory)'
              artifact: dropdeploymentscripts
    - stage: BuildArtifacts
      displayName: Build Artifacts
      condition: succeeded()
      jobs:
          - job: BuildAF
            displayName: Build azure functions
            steps:
            - task: UseDotNet@2
              displayName: Use Dot Net Core 6.0
              inputs:
                packageType: 'sdk'
                version: '6.0.x'
            - task: DotNetCoreCLI@2
              displayName: 'Restore project dependencies'
              inputs:
                command: 'restore'
                projects: 'src/MCOM.Provisioning.Functions/*.csproj'
            - task: DotNetCoreCLI@2
              displayName: 'Build solution'
              inputs:
                command: 'build'
                projects: 'src/MCOM.Provisioning.Functions/*.csproj'             
            - task: DotNetCoreCLI@2
              displayName: 'Publish the function project - $(BuildConfiguration)'
              inputs:
                command: 'publish'
                projects: 'src/MCOM.Provisioning.Functions/*.csproj'
                publishWebProjects: false
                arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(BuildConfiguration)'
                zipAfterPublish: true
            - task: ArchiveFiles@2
              displayName: "Archive function files"
              inputs:
                rootFolderOrFile: '$(pathToFunctionAppProjectDirectory)'
                includeRootFolder: false
                archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
            - publish: '$(Build.ArtifactStagingDirectory)'
              displayName: 'Publish function app artifact'
              artifact: dropazfunc
            - task: PowerShell@2
              displayName: 'Rename connection file'
              inputs:
                filePath: 'src/MCOM.Azure.Deployment/scripts/provisioning/rename-connection-file.ps1'
                arguments: '$(pathToLogicAppProjectDirectory)'
            - task: ArchiveFiles@2
              displayName: 'Create project zip for provisioning logic app'
              inputs:
                rootFolderOrFile: '$(pathToLogicAppProjectDirectory)'
                includeRootFolder: false
                archiveType: 'zip'
                archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
                replaceExistingArchive: true
            - publish: '$(Build.ArtifactStagingDirectory)'
              displayName: 'Publish logicapp artifact'
              artifact: droplogicapp
    - stage: RunTests
      displayName: Run Tests
      condition: succeeded()
      jobs:
          - job: RunTests
            displayName: Run Tests
            steps:
            - task: DotNetCoreCLI@2
              displayName: 'Run Unit tests'
              inputs:
                command: 'test'
                projects: 'src/MCOM.Tests/*.csproj'
                publishTestResults: true
                testRunTitle: 'MCOM Tests'
    - stage: DeployDev
      displayName: Deploy logic apps infrastructure and code to dev
      condition: succeeded()
      jobs:
          - deployment: DeployLogic
            displayName: Deploy MCOM Logic            
            environment: 'dev'
            variables:
              deploymentMode: 'Incremental'
            strategy:
              runOnce:
                deploy:
                  steps:
                  - task: AzureCLI@2
                    displayName: Deploy infrastructure for logic app
                    inputs:
                      azureSubscription: '$(AzureServiceConnectionName)'
                      scriptType: 'ps'
                      scriptLocation: 'scriptPath'
                      scriptPath: '$(Agent.BuildDirectory)/dropdeploymentscripts/scripts/provisioning/deploy-mcom-provisioning-logicapps.ps1'
                      arguments: '-SubscriptionId $(subscriptionId) -ResourceGroupName $(resourceGroupName) -ResourceGroupLocation $(resourceGroupLocation) -Environment $(environment) -armLocation "$(Agent.BuildDirectory)/dropdeploymentscripts/armtemplates/provisioning"'           
                  - task: AzureCLI@2
                    displayName: Deploy infrastructure for azure function
                    inputs:
                      azureSubscription: '$(AzureServiceConnectionName)'
                      scriptType: 'ps'
                      scriptLocation: 'scriptPath'
                      scriptPath: '$(Agent.BuildDirectory)/dropdeploymentscripts/scripts/provisioning/deploy-mcom-provisioning-functions.ps1'
                      arguments: '-SubscriptionId $(subscriptionId) -ResourceGroupName $(resourceGroupName) -ResourceGroupLocation $(resourceGroupLocation) -Environment $(environment) -armLocation "$(Agent.BuildDirectory)/dropdeploymentscripts/armtemplates/provisioning"'           
                  - task: AzureCLI@2
                    displayName: Deploy infrastructure for service bus
                    inputs:
                      azureSubscription: '$(AzureServiceConnectionName)'
                      scriptType: 'ps'
                      scriptLocation: 'scriptPath'
                      scriptPath: '$(Agent.BuildDirectory)/dropdeploymentscripts/scripts/provisioning/deploy-mcom-provisioning-servicebus.ps1'
                      arguments: '-SubscriptionId $(subscriptionId) -ResourceGroupName $(resourceGroupName) -ResourceGroupLocation $(resourceGroupLocation) -Environment $(environment) -armLocation "$(Agent.BuildDirectory)/dropdeploymentscripts/armtemplates/provisioning"'           
                  - task: AzureFunctionApp@2
                    displayName: 'Deploy functions in app'
                    inputs:
                      azureSubscription: '$(AzureServiceConnectionName)'
                      appType: functionApp
                      appName: 'function-mcom-provisioning-inttest'
                      package: $(Agent.BuildDirectory)/dropazfunc/$(Build.BuildId).zip
                      deploymentMethod: 'auto'
                  - task: AzureFunctionApp@1
                    displayName: 'Deploy logic app workflows'
                    inputs:
                      azureSubscription: '$(AzureServiceConnectionName)'
                      appType: 'functionApp'
                      appName: 'logic-mcom-provisioning-inttest'
                      package: '$(Agent.BuildDirectory)/droplogicapp/$(Build.BuildId).zip'
                      deploymentMethod: 'zipDeploy'

          