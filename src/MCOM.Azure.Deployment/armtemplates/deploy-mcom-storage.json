{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "metadata": {
        "description": "MCOM environment."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    // Storage account
    "storageAccountName": {
      "type": "string",
      "defaultValue": "stmcom",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "dcfcontainer": {
      "type": "string",
      "defaultValue": "dcf",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "edibankcontainer": {
      "type": "string",
      "defaultValue": "edibank",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "gasoperationscontainer": {
      "type": "string",
      "defaultValue": "gasops",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "gomcontainer": {
      "type": "string",
      "defaultValue": "gom",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "exchangecontainer": {
      "type": "string",
      "defaultValue": "exchange",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "scanrequestscontainer": {
      "type": "string",
      "defaultValue": "scanrequests",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "outputcontainer": {
      "type": "string",
      "defaultValue": "output",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "logscontainer": {
      "type": "string",
      "defaultValue": "mcomlogs",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    "queueName": {
      "type": "string",
      "defaultValue": "feedbackqueue",
      "metadata": {
        "description": "Name for Azure queue"
      }
    }
  },
  "variables": {
    "functionStorageAccountName": "[concat(parameters('storageAccountName'), 'functions', parameters('environment'))]",
    "archivingFunctionStorageAccountName": "[concat(parameters('storageAccountName'), 'archfunc', parameters('environment'))]",
    "stagingareaStorageAccountName": "[concat(parameters('storageAccountName'), 'stgarea', parameters('environment'))]",
    "loggingStorageAccountName": "[concat(parameters('storageAccountName'), 'logs', parameters('environment'))]"
  },
  "resources": [
    // Storage account    
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('stagingareaStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ],
          "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
          },
          "properties": {
            "cors": {
              "corsRules": []
            },
            "deleteRetentionPolicy": {
              "enabled": false
            }
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default/', parameters('dcfcontainer'))]",
          "properties": {
            "metadata": [
              {"postfeedbackclienturl" : ""},
              {"postfeedbackheaders" : ""}
            ]
          },
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('stagingareaStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        },
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default/', parameters('edibankcontainer'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('stagingareaStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        },
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default/', parameters('gasoperationscontainer'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('stagingareaStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        },
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default/', parameters('gomcontainer'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('stagingareaStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        },
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default/', parameters('exchangecontainer'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('stagingareaStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        },
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default/', parameters('scanrequestscontainer'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('stagingareaStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        },
        {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default/', parameters('outputcontainer'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('stagingareaStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        },
        {
          "type": "Microsoft.Storage/storageAccounts/tableServices",
          "apiVersion": "2021-01-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        },
        {
          "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
          "apiVersion": "2021-01-01",
          "name": "[concat(variables('stagingareaStorageAccountName'), '/default/logsmcom')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('stagingareaStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName'))]"
          ]
        }
      ]
    },
    // Storage account
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-01-01",
      "name": "[variables('functionStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts/tableServices",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('functionStorageAccountName'), '/default/')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]"
          ],
          "properties": {
            "cors": {
              "corsRules": []
            }
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts/queueServices",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('functionStorageAccountName'), '/default')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]"
          ],
          "properties": {
            "cors": {
              "corsRules": []
            }
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('functionStorageAccountName'), '/default/', parameters('queueName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]"
          ],
          "properties": {
            "metadata": {}
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('functionStorageAccountName'), '/default/', parameters('queueName'), '-poison')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]"
          ],
          "properties": {
            "metadata": {}
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-01-01",
      "name": "[variables('archivingFunctionStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts/tableServices",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('archivingFunctionStorageAccountName'), '/default/')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('archivingFunctionStorageAccountName'))]"
          ],
          "properties": {
            "cors": {
              "corsRules": []
            }
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts/queueServices",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('archivingFunctionStorageAccountName'), '/default')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('archivingFunctionStorageAccountName'))]"
          ],
          "properties": {
            "cors": {
              "corsRules": []
            }
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('archivingFunctionStorageAccountName'), '/default/', parameters('queueName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('archivingFunctionStorageAccountName'))]"
          ],
          "properties": {
            "metadata": {}
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('archivingFunctionStorageAccountName'), '/default/', parameters('queueName'), '-poison')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('archivingFunctionStorageAccountName'))]"
          ],
          "properties": {
            "metadata": {}
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-01-01",
      "name": "[variables('loggingStorageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "resources": [
        {
          "type": "Microsoft.Storage/storageAccounts/tableServices",
          "apiVersion": "2021-04-01",
          "name": "[concat(variables('loggingStorageAccountName'), '/default')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('loggingStorageAccountName'))]"
          ],
          "properties": {
            "cors": {
              "corsRules": []
            }
          }
        },
        {
          "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
          "apiVersion": "2021-06-01",
          "name": "[concat(variables('loggingStorageAccountName'), '/default/LogArchive')]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('loggingStorageAccountName'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('loggingStorageAccountName'))]"
          ]
        }
      ]
    }
  ],
  "outputs": {}
}