{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "metadata": {
        "description": "MCOM environment."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    // App service plan
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "plan-mcom",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    // Function App
    "appName": {
      "type": "string",
      "defaultValue": "function-mcom",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet-isolated",
      "allowedValues": [
        "dotnet-isolated",
        "node",
        "dotnet",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "stmcom",
      "metadata": {
        "description": "Name for storage account"
      }
    },
    // App insights
    "appInsightsName": {
      "type": "string",
      "defaultValue": "appi-mcom",
      "metadata": {
        "description": "Location for Application Insights"
      }
    },
    // SharePoint online
    "SharePointUrl": {
      "type": "string",
      "metadata": {
        "description": "Url to the SharePoint site where the function will have permissions to access"
      }
    },
    "queueName": {
      "type": "string",
      "defaultValue": "feedbackqueue",
      "metadata": {
        "description": "Name for Azure queue"
      }
    }
  },
  "variables": {
    "functionStorageAccountName": "[concat(parameters('storageAccountName'), 'scanfunc', parameters('environment'))]",
    "stagingareaStorageAccountName": "[concat(parameters('storageAccountName'), 'stgarea', parameters('environment'))]",
    "functionAppName": "[concat(parameters('appName'), '-scanondemand-', parameters('environment'))]",
    "hostingPlanName": "[concat(parameters('appServicePlanName'), '-scanondemand-', parameters('environment'))]",
    "applicationInsightsName": "[concat(parameters('appInsightsName'), '-', parameters('environment'))]"
  },
  "resources": [   
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic"
      }
    }, 
    // Application insights
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('appInsightsName')))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('appInsightsName')]",
        "Request_Source": "rest"
      }
    },
    // Function App
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('microsoft.insights/components', variables('applicationInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~10"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "APPINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').ConnectionString]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[parameters('runtime')]"
            },
            {
              "name": "BlobStorageAccountName",
              "value": "[variables('stagingareaStorageAccountName')]"
            },
            {
              "name": "BlobStorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('stagingareaStorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('stagingareaStorageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "QueueConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "MandatoryMetadataFields",
              "value": "Source,Filename"
            },
            {
              "name": "BlobMaxRetries",
              "value": "5"
            },
            {
              "name": "BlobOverwriteExistingFile",
              "value": "true"
            },
            {
              "name": "BlobIsLoggingEnabled",
              "value": "true"
            },
            {
              "name": "BlobIsTelemetryEnabled",
              "value": "false"
            },
            {
              "name": "BlobIsDistributedTracingEnabled",
              "value": "false"
            },
            {
              "name": "AppInsightsAppId",
              "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').AppId]"
            },
            {
              "name": "SharePointUrl",
              "value": "[parameters('SharePointUrl')]"
            },
            {
              "name": "QueuePoisonName",
              "value": "[concat(parameters('queueName'), '-poison')]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]
        }
      }
    }
  ],
  "outputs": {}
}